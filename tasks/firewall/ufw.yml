---
- name: firewall | ufw | Start ufw service
  ansible.builtin.service:
    name: ufw
    enabled: true
    state: started

- name: firewall | ufw | Enable ufw
  community.general.ufw:
    direction: incoming
    state: enabled
    policy: allow

- name: firewall | ufw | Enable forwarding - ufw
  ansible.builtin.lineinfile:
    dest: /etc/default/ufw
    regexp: "^DEFAULT_FORWARD_POLICY="
    line: DEFAULT_FORWARD_POLICY="ACCEPT"

- name: firewall | ufw | Allow incoming VPN connections - ufw
  community.general.ufw:
    direction: in
    proto: "{{ openvpn_proto }}"
    to_port: "{{ openvpn_port | string }}"
    rule: allow

- name: firewall | ufw | Accept packets from VPN tunnel adaptor - ufw
  community.general.ufw:
    direction: in
    interface: tun0
    rule: allow

- name: firewall | ufw | Setup nat table rules - ufw
  ansible.builtin.blockinfile:
    dest: /etc/ufw/before.rules
    state: present
    insertbefore: \*filter
    block: |
      # OpenVPN config
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s {{ openvpn_server_network }}/24 ! -d {{ openvpn_server_network }}/24 -j SNAT --to-source {{ openvpn_lan_source_ip }}
      COMMIT
  when: openvpn_masquerade_not_snat is falsy
  notify:
    - Restart ufw

- name: firewall | ufw | Setup nat table rules with MASQUERADE - ufw
  ansible.builtin.blockinfile:
    dest: /etc/ufw/before.rules
    state: present
    insertbefore: \*filter
    block: |
      # OpenVPN config
      *nat
      :POSTROUTING ACCEPT [0:0]
      -A POSTROUTING -s {{ openvpn_server_network }}/24 ! -d {{ openvpn_server_network }}/24  -j MASQUERADE
      COMMIT
  when: openvpn_masquerade_not_snat is truthy
  notify:
    - Restart ufw

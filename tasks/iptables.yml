- name: setting facts for CentOS/RHEL/Fedora
  set_fact:
    iptables_service: iptables
  when: ansible_os_family == 'RedHat'

- name: setting facts for Debian < 9 or Ubuntu < 16
  set_fact:
    iptables_save_cmd: /etc/init.d/iptables-persistent
    iptables_service: iptables
  when: (ansible_distribution == 'Debian' and ansible_lsb.major_release|int < 9) or (ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int < 16)

- name: setting facts for Debian >= 9 or Ubuntu >= 16
  set_fact:
    iptables_save_cmd: /usr/sbin/netfilter-persistent
    iptables_service: netfilter-service
  when: (ansible_distribution == 'Debian' and ansible_lsb.major_release|int >= 9) or (ansible_distribution == 'Ubuntu' and ansible_lsb.major_release|int >= 16)

- name: iptables - Allow VPN forwarding
  iptables:
    chain: FORWARD
    source: "{{openvpn_server_network}}/24"
    jump: ACCEPT
    comment: "Allow VPN forwarding"

- name: iptables - Allow incoming VPN connection
  iptables:
    chain: INPUT
    protocol: "{{openvpn_proto}}"
    destination_port: "{{openvpn_port}}"
    jump: ACCEPT
    comment: "Allow incoming VPN connection"

- name: iptables - Accept packets from VPN tunnel adaptor
  iptables:
    chain: INPUT
    in_interface: tun0
    jump: ACCEPT
    comment: "Accept packets from VPN tunnel adaptor"

- name: iptables - Perform NAT readdressing
  iptables:
    table: nat
    chain: POSTROUTING
    source: "{{openvpn_server_network}}/24"
    to_source: "{{ansible_default_ipv4.address}}"
    jump: SNAT
    comment: "Perform NAT readdressing"

- name: iptables - save everything (CentOS/RHEL/Fedora)
  shell: iptables-save > /etc/sysconfig/iptables
  become: yes
  when: ansible_os_family == 'RedHat'

- name: Install iptables-persistent (Debian/Ubuntu)
  package:
    name: iptables-persistent
    state: present
  when: ansible_pkg_mgr == "Debian"

- name: iptables - save everything (Debian/Ubuntu)
  command: "{{ iptables_save_cmd }} save"
  when: ansible_os_family == 'Debian'

- name: Enable iptables
  service:
    name: "{{ iptables_service }}"
    enabled: true
    state: started
